
# Dec 28, 2017

## Conductivity

- Conductivity before decoupling:

<img src="./imgs/conductivity_before_decoupling.png" width=700>



- Initial conductivity calibration. Green line is a linear fit ing gnuplot, y=m*x+b, where:
         
b = 0.15355 +/- 0.002673 (1.741%)
c = 1956.42 +/- 6.986 (0.3571%)

<img src="./imgs/conductivity_calibration.png" width=700>

- Conductiving after decoupling via radio:


<img src="./imgs/conductivity_decoupled.png" width=700>

- Replacing conductivity probe in new solution:

<img src="./imgs/conductivity_progress_2017_12_28.png" width=700>


- Longer-time conductivity probe in new solution -- ah, had dipped in new solution, then put in old solution by accident! That's why huge surge, then recovery ...
(generated by gnuplot -p conductivity_progress.s)

<img src="./imgs/conductivity_progress_2017_12_29.png" width=700>

ut_1514575855

when I put the conductivity probe in a new solution, it didn't react. It kept the same conductivity value no matter what solution it was placed in.

I think moved to a new conductivity probe, and regained sensitivity.

I now believe that the explanation for the previous behavior is: 

- The probe had saturated in the solution -- the audio jack had leaked.
- I placed the probe in a high-conductivity solution for a bit. Some of that solution entered the probe.
- I then unwittingly replaced the probe in a lower-conductivity solution for a bit.  There was a slow leaking out of the higher-conductivity solution.  This accounts for the relatively long decay.

I think this is what happened.

The next step is: to make a better probe, using epoxy and e.g. platinized titanium.

I now have good confidence in the stability of the circuit; it's a matter of making nice probes.




## Pressure and Depth

- Initial pressure comparison: 

<img src="./imgs/pressure_comparison.png" width=700>

- Pressure progress (generated by gnuplot -p pressure_corrected_progress.s)
<img src="./imgs/pressure_progress_2017_12_29.png" width=700>


- Depth progress (generated by gnuplot -p depth_corrected_progress.s)
<img src="./imgs/depth_progress_2017_12_29.png" width=700>

Preliminary conclusion: fluctuation of around a centimeter or so after ambient correction. 

But ... I may have moved both the ambient sensor ...

<img src="./imgs/depth_rulerz_s.jpg" width = 700> 

... and, by rearranging the bucket, reoriented the pressure sensor and caused a height difference of a cm or so ...

So if we're going to be more precise than 1 cm, I need to start anchoring the ambient sensor and the depth sensor sufficiently.  

Principle: one constraint on the resolution of the ruler measurement is how steadily you can hold the ruler in place. 

[Reference](https://www.grc.nasa.gov/www/k-12/WindTunnel/Activities/fluid_pressure.html) for calculating fluid height via pressure and density. I'm assuming fluid density of 997 kg / m^3.

- Code for feather m0 lora -- provide square wave @ ~20 kHz for conductivity circuit (freq chosen to match historical choice, not necessarily optimal) -- measure temperature via thermistor -- then transmit via json packet (we're using radio so that we decouple any odd power source couplings as seemed to happen over usb): [Conductivity_temp_m0_lora_transmit_json.ino](https://gist.github.com/dwblair/2b517428a16a0688a78964487ea80d20)

- Previous code that simply shows that we can combine pwm and lora code (there was a conflict with a timer function in an earlier version).  To do:  'start' and 'stop' the timer so that we are not always pulsing the solution (avoid polarization effects); dial in arbitrary frequency via a nice function with a 'freq' parameter: [Combining lora and pwm](https://gist.github.com/dwblair/c448957f44c1a48607a121f1aecbbcc7)

- Lora receive code that takes in packets and sends them over serial. Useful for putting lora feather m0 on USB port and using it as a 'passthrough': [m0_lora_receive.ino](https://gist.github.com/dwblair/d912583478ffd3f4efd28e238f1005e3)

- Code for depth sensor using ms5837 and transmitting over max485 chip: [row_depth_sensor_ms5837.ino](https://gist.github.com/dwblair/cdbe6cdaf3c83865badefdc39568a504)

- Code for ambient pressure and temp sensor, useful for compensating pressure fluctuations: [row_bme280_ambient_pressure_sensor.ino](https://gist.github.com/dwblair/602192bfc65250a26da9f316b5d9a4b5)

I unified the scripts for pulling in bucket pressure sensor and ambient pressure sensor data, so that they had identical timestamps, so that I could just subtract one from the other as a correction (see attached graphs.  I tried to keep the y-axis scale the same for all graphs, and use a similar visual metric, so you can assess the relative correction.)

Then: I spent the last few days tracking down sources of noise in the conductivity expt.  It was pretty good, but had a weird periodic wiggle / drift ... I did all the signal-chain things I could think of (made a better probe, shortened the wires for the analog measurement, compensated for temperature) ... but still a wiggle.  Then thought: this has gotta be coupling in the measurement circuitry to fluctuations in power supply (a problem i'd had on a raspberry pi before).  So I redid the conductivity measurement code on a radio-based microcontroller, and made the entire experiment battery-powered, broadcasting its data to another radio connected to the RPi.  Now it's supersmooth!

So: both depth sensor and conductivity sensor seem quite stable now!

From the exchange with Liz Glivinski a while back: 

> For your calibrations, the Federal chloride standards translate to about 875-925 uS/cm for chronic exceedance and 2500-3000 uS/cm for acute exceedances. I will be in the office everyday expect Friday this week and next so feel free to give me a buzz if you have any questions.

I did a rough calibration on the sensor to get things into specific conductivity units; I think the current setup I've got can do up to around 3500 uS/cm; and on that ~14 hour run, it looks like the standard deviation in the conductivity sensor for a solution around 1400 uS/cm is about 4 uS/cm.  So I'm getting pretty confident that we could pretty solidly distinguish 'below 900 uS/cm" from "somewhere 900 uS/cm and 2800" from "significantly above 3000 uS/cm".  The next step for conductivity might be: make the prototype more solid, and co-deploy it alongside established sensors, to see how it behaves in the field.

